apiVersion: apps/v1
kind: Deployment
metadata:
  name: jobs
  namespace: workhub
  labels:
    app: jobs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jobs
  template:
    metadata:
      labels:
        app: jobs
    spec:
      initContainers:
        - name: prisma-migrate
          image: 570489932149.dkr.ecr.af-south-1.amazonaws.com/workhub/jobs:latest
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - |
              npx prisma migrate deploy --schema=apps/jobs/prisma/schema.prisma
          env:
            {{- include "common.env" . | nindent 12 }}
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@{{ .Release.Name }}-postgresql.postgresql.svc.cluster.local:5432/jobs
      containers:
        - name: jobs
          image: 570489932149.dkr.ecr.af-south-1.amazonaws.com/workhub/jobs:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: uploads-volume
              mountPath: /app/apps/jobs/uploads
          ports:
            - name: http
              containerPort: 3001
            - name: grpc
              containerPort: 50004
          env:
            {{- include "common.env" . | nindent 12 }}
            - name: AUTH_GRPC_SERVICE_URL
              Value: "auth-grpc:{{ .Value.auth.port.grpc }}"
            - name: PORT
              value: "{{ .value.jobs.port.http }}"
            - name: JOBS_GRPC_SERVICE_URL
              value: "0.0.0.0:{{ .Value.jobs.port.grpc}}"
            - name: DATABASE_URL
               value: postgresql://postgres:postgres@{{ .Release.Name }}-postgresql.postgresql.svc.cluster.local:5432/jobs
      volumes:
        - name: uploads-volume
          persistentVolumeClaim:
            clainName: uploads-pvc
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 10
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /ready
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 10
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
