{{- if .Values.auth.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: workhub
  labels:
    app: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      initContainers:
        - name: prisma-migrate
          image: 570489932149.dkr.ecr.af-south-1.amazonaws.com/workhub/auth:latest
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - |
              npx prisma migrate deploy --schema=apps/auth/prisma/schema.prisma
          env:
            {{- include "common.env" . | nindent 12 }}
        - name: DATABASE_URL
          value: postgresql://postgres:postgres@{{ .Release.Name }}-postgresql.postgresql.svc.cluster.local:5432/auth
      containers:
        - name: auth
          image: 570489932149.dkr.ecr.af-south-1.amazonaws.com/workhub/auth:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              containerPort: 50051
          env:
            {{- include "common.env" . | nindent 12 }}
            - name: PORT
              value: "{{.Values.auth.port.http }}"
            {{- if .Values.auth.jwt.secure }}
            - name: SECURE_COOKIE
              value: "{{ .Values.auth.jwt.secure}}"
            - name: JWT_SECRET
              value: "{{ .Values.auth.jwt.secret }}"
            {{- end }}
            - name: JWT_EXPIRATION_MS
              value: "{{ .Values.auth.jwt.expirationMs }}"
            - name: AUTH_GRPC_SERVICE_URL
              value: "0.0.0.0:{{ .Values.auth.port.grpc }}"
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@{{ .Release.Name }}-postgresql.postgresql.svc.cluster.local:5432/auth
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 3002
            initialDelaySeconds: 10
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /ready
              port: 3002
            initialDelaySeconds: 5
            periodSeconds: 10
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
